substitutions:
  devicename:    espresenceld_b655d0                          # Chose an arbitrary name max 32 characters
  devicename_id: espresenceld_b655d0                          # chose an arbitrary ID 
  apikey: "/ApGQuwu3PHMk5dgZxNrBIc1fZDGBDfwt3qi8PoTDWg="  # Random Base64 32byte string - for generating > https://esphome.io/components/api.html#configuration-variables
  wifi_ssid: io                           # Change with the name of your Wi-Fi Access Point
  wifi_password:                     # Change with your Wi-Fi password
  static_ipaddr: 192.168.3.1                            # Change for use a static ip address or to use DHCP, remove this row and manual_ip block
  gateway_ip: 192.168.1.1                                 # Change for use a static ip address or to use DHCP, remove this row and manual_ip block
  subnet_mask: 255.255.255.0                              # Change for use a static ip address or to use DHCP, remove this row and manual_ip block
  dns_ip: 8.8.8.8                                         # Change for use a static ip address or remove this row and manual_ip block
  ap_mode_password: "12345678"                            # Change password for access point mode (fallback)
  altitude: 245m                                          # Change the value based on your location altitude
##############################################################################################################

esphome:
  name: $devicename_id
  friendly_name: $devicename

esp32:
  board: lolin_s2_mini
  framework:
    type: arduino

# Enable logging
logger:

wifi:
  ssid: $wifi_ssid
  password: $wifi_password
#####################################################################
######            REMOVE THIS BLOCK IF YOU USE DHCP           #######        
#####################################################################
  manual_ip:                                                       ##
    static_ip: $static_ipaddr                                      ##
    gateway:   $gateway_ip                                         ##
    subnet:    $subnet_mask                                        ##
    dns1:      $dns_ip                                             ##
                                                                   ##
#####################################################################

  ap:
    ssid:      $devicename Hotspot
    password:  $ap_mode_password

captive_portal:

ota:

# Enable Home Assistant API
api:
  encryption:
    key: $apikey

web_server:
  port: 80
  version: 2
  local: true
 
ld2410:
 
uart:
  tx_pin: GPIO18
  rx_pin: GPIO33
  baud_rate: 256000
  parity: NONE
  stop_bits: 1
 
i2c:
  - id: bus_a
    sda: 9 
    scl: 11
    scan: true
 
sensor:
  # Retain last Detection Distance reported --------------
  - platform: template
    name: "Last Detection Distance"
    id: last_detection_distance
    unit_of_measurement: cm
    accuracy_decimals: 0
    update_interval: 1s
    lambda: |-
      if ((id(binary_has_target).state) && (id(presence_det_dist).state > 0)) {
        return id(presence_det_dist).state;
      } else {
        return {};
      }
  # LD2410 Sensors ----------------------------------------
  - platform: ld2410
    light:
      name: "Light"
    moving_distance:
      name: "Moving Distance"
    still_distance:
      name: "Still Distance"
    moving_energy:
      name: "Move Energy"
    still_energy:
      name: "Still Energy"
    detection_distance:
      name: "Detection Distance"
      id: presence_det_dist
    g0:
      move_energy:
        id: g0move 
        name: "G0 move energy"
        internal: true
      still_energy:
        id: g0still
        name: "G0 still energy"
        internal: true
    g1:
      move_energy:
        id: g1move
        name: "G1 move energy"
        internal: true
      still_energy:
        id: g1still
        name: "G1 still energy"
        internal: true
    g2:
      move_energy:
        id: g2move 
        name: "G2 move energy"
        internal: true
      still_energy:
        id: g2still 
        name: "G2 still energy"
        internal: true
    g3:
      move_energy:
        id: g3move 
        name: "G3 move energy"
        internal: true
      still_energy:
        id: g3still
        name: "G3 still energy"
        internal: true
    g4:
      move_energy:
        id: g4move 
        name: "G4 move energy"
        internal: true
      still_energy:
        id: g4still
        name: "G4 still energy"
        internal: true
    g5:
      move_energy:
        id: g5move 
        name: "G5 move energy"
        internal: true
      still_energy:
        id: g5still
        name: "G5 still energy"
        internal: true
    g6:
      move_energy:
        id: g6move 
        name: "G6 move energy"
        internal: true
      still_energy:
        id: g6still
        name: "G6 still energy"
        internal: true
    g7:
      move_energy:
        id: g7move 
        name: "G7 move energy"
        internal: true
      still_energy:
        id: g7still
        name: "G7 still energy"
        internal: true
    g8:
      move_energy:
        id: g8move 
        name: "G8 move energy"
        internal: true
      still_energy:
        id: g8still
        name: "G8 still energy"
        internal: true
 
  - platform: bh1750
    name: "Light Sensor"
    address: 0x23
    update_interval: 10s
    id: bh1750_sensor
 
  - platform: aht10
    variant: AHT10
    address: 0x38
    temperature:
      name: "Temperature"
#      filters:
#        - calibrate_linear:
#          - 23.29 -> 13.8
#          - 25.16 -> 15.0
#          - 28.45 -> 19.5
#          - 37.25 -> 20.8
#          - 45.76 -> 25.1
#          - 48.63 -> 26.2
#          - 50.36 -> 33.1
#          - 68.2 -> 35.3
#        - offset: 0
    humidity:
      name: "Humidity"
#      filters:
#        - calibrate_linear:
#          - 0.31 -> 32.7
#          - 10.89 -> 36.4
#          - 11.21 -> 45.1
#          - 14.52 -> 48.2
#          - 24.88 -> 60.9
#          - 43.58 -> 65.8
#          - 45.67 -> 81.5
#          - 53.30 -> 87.7
#        - offset: 0
    update_interval: 5s

binary_sensor:
  - platform: ld2410
    has_target:
      name: "Presence"
      id: binary_has_target
    has_moving_target:
      name: "Moving presence"
    has_still_target:
      name: "Still presence"
    out_pin_presence_status:
      name: "Out pin presence status"
  ## Set Up Zones Based On Distance reported by the sensor
  - platform: template
    name: "Zone 1 Occupancy"
    device_class: occupancy
    icon: mdi:motion-sensor
    lambda: |-
      if ((id(binary_has_target).state) && ((id(last_detection_distance).state < id(presence_z1_end).state))) {
        return true;
      } else {
        return false;
      }
  - platform: template
    name: "Zone 2 Occupancy"
    device_class: occupancy
    icon: mdi:motion-sensor
    lambda: |-
      if ((id(binary_has_target).state) && ((id(presence_z1_end).state < id(last_detection_distance).state) && (id(last_detection_distance).state < id(presence_z2_end).state))) {
        return true;
      } else {
        return false;
      }
  - platform: template
    name: "Zone 3 Occupancy"
    device_class: occupancy
    icon: mdi:motion-sensor
    lambda: |-
      if ((id(binary_has_target).state) && ((id(presence_z2_end).state < id(last_detection_distance).state) && (id(last_detection_distance).state < id(presence_z3_end).state))) {
        return true;
      } else {
        return false;
      }
 
number:
  - platform: ld2410
    timeout:
      name: "Timeout"
      entity_category: config
    light_threshold:
      name: "Light threshold"
      entity_category: config
    max_move_distance_gate:
      name: "Max move distance gate"
      entity_category: config
    max_still_distance_gate:
      name: "Max still distance gate"
      entity_category: config
    g0:
      move_threshold:
        name: "G0 move threshold"
      still_threshold:
        name: "G0 still threshold"
    g1:
      move_threshold:
        name: "G1 move threshold"
      still_threshold:
        name: "G1 still threshold"
    g2:
      move_threshold:
        name: "G2 move threshold"
      still_threshold:
        name: "G2 still threshold"
    g3:
      move_threshold:
        name: "G3 move threshold"
      still_threshold:
        name: "G3 still threshold"
    g4:
      move_threshold:
        name: "G4 move threshold"
      still_threshold:
        name: "G4 still threshold"
    g5:
      move_threshold:
        name: "G5 move threshold"
      still_threshold:
        name: "G5 still threshold"
    g6:
      move_threshold:
        name: "G6 move threshold"
      still_threshold:
        name: "G6 still threshold"
    g7:
      move_threshold:
        name: "G7 move threshold"
      still_threshold:
        name: "G7 still threshold"
    g8:
      move_threshold:
        name: "G8 move threshold"
      still_threshold:
        name: "G8 still threshold"
  # setup threshold for LDR reading
  - platform: template
    name: "LDR Threshold"
    id: ldr_sens
    min_value: 20
    max_value: 600
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 310
    icon: "mdi:head-lightbulb"
    entity_category: CONFIG
  # setup for 3 zones --> occupancy ending values (distance)
  - platform: template
    name: "Zone 1 End Distance"
    id: presence_z1_end
    device_class: distance
    min_value: 0
    max_value: 600
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 50
    icon: "mdi:arrow-collapse-right"
    entity_category: CONFIG
  - platform: template
    name: "Zone 2 End Distance"
    id: presence_z2_end
    device_class: distance
    min_value: 0
    max_value: 600
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 100
    icon: "mdi:arrow-collapse-right"
    entity_category: CONFIG
  - platform: template
    name: "Zone 3 End Distance"
    id: presence_z3_end
    device_class: distance
    min_value: 0
    max_value: 600
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 200
    icon: "mdi:arrow-collapse-right"
    entity_category: CONFIG


switch:
  - platform: ld2410
    engineering_mode:
      name: "Engineering Mode"
      id: engineering_mode
    bluetooth:
      name: "Control bluetooth"
  - platform: restart
    name: "ESP Restart"

button:
  - platform: ld2410
    factory_reset:
      name: "factory reset"
    restart:
      name: "LD2410 restart"
    query_params:
      name: query params
  - platform: restart
    entity_category: diagnostic
    icon: mdi:power-cycle
    name: "ESP reboot"
  - platform: factory_reset
    name: "Restart ESP with Factory Default Settings"

select:
  - platform: ld2410
    distance_resolution:
      name: "distance resolution"
    baud_rate:
      name: "baud rate"
    light_function:
      name: light function
    out_pin_level:
      name: out pin level
 
text_sensor:
  - platform: ld2410
    version:
      name: "firmware version"         
  - platform: wifi_info
    ip_address:
      name: ESP IP Address
    ssid:
      name: ESP Connected SSID
    bssid:
      name: ESP Connected BSSID
    mac_address:
      name: ESP Mac Wifi Address
  - platform: template
    name: "array sensor data"
    lambda: |-
        if (id(engineering_mode).state) {
           return "["
                + std::to_string(int(id(g0move).state)) + "," + std::to_string(int(id(g0still).state)) + ","
                + std::to_string(int(id(g1move).state)) + "," + std::to_string(int(id(g1still).state)) + ","
                + std::to_string(int(id(g2move).state)) + "," + std::to_string(int(id(g2still).state)) + ","
                + std::to_string(int(id(g3move).state)) + "," + std::to_string(int(id(g3still).state)) + ","
                + std::to_string(int(id(g4move).state)) + "," + std::to_string(int(id(g4still).state)) + ","
                + std::to_string(int(id(g5move).state)) + "," + std::to_string(int(id(g5still).state)) + ","
                + std::to_string(int(id(g6move).state)) + "," + std::to_string(int(id(g6still).state)) + ","
                + std::to_string(int(id(g7move).state)) + "," + std::to_string(int(id(g7still).state)) + ","
                + std::to_string(int(id(g8move).state)) + "," + std::to_string(int(id(g8still).state))
                + "]";
        } else {
          return std::string("engineering mode off");
        }
    update_interval: 1s
